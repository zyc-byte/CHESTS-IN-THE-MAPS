name: Build C++ (Canary & Release)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  canary:
    name: Canary (clang++ on Linux/macOS, MSVC on Windows)
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Linux: 安装 clang，并使用 clang++ 构建
      - name: Install clang (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang

      - name: Build Canary with clang++ (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          # 先尝试 -std=c++23；若 clang 版本较旧不识别，则回退到 -std=c++2b
          clang++ -std=c++23 Canary.cpp -o Canary || clang++ -std=c++2b Canary.cpp -o Canary

      # Windows: 使用 MSVC (cl)
      - name: Setup MSVC dev cmd (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build Canary with MSVC (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          rem 使用 C++23；若你的镜像较旧，可将 /std:c++23 改为 /std:c++latest
          cl /nologo /EHsc /std:c++23 Canary.cpp /Fe:Canary-msvc.exe

      # 可选：上传构建产物
      - name: Upload Canary artifact
        uses: actions/upload-artifact@v4
        with:
          name: Canary-${{ runner.os }}
          path: |
            Canary
            Canary-msvc.exe
          if-no-files-found: ignore

  release:
    name: Release (Windows g++)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 安装并启用 MSYS2 + MinGW-w64 的 g++
      - name: Setup MSYS2 with MinGW-w64 (x86_64)
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc

      - name: Build Release with g++ (MinGW)
        shell: msys2 {0}
        run: |
          g++ -std=c++23 Release.cpp -o Release.exe

      # 可选：上传构建产物
      - name: Upload Release artifact
        uses: actions/upload-artifact@v4
        with:
          name: Release-windows-mingw
          path: Release.exe
